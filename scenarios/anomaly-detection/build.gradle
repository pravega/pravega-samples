/*
 * Copyright (c) 2017 Dell Inc., or its subsidiaries. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 */
plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.4'
}

apply plugin: "java"
apply plugin: "scala"
apply plugin: "distribution"
apply plugin: 'idea'
apply plugin: 'eclipse'

sourceCompatibility = "1.8"

archivesBaseName = 'pravega-flink-scenario-anomaly-detection'

dependencies {
    compile "io.pravega:pravega-keycloak-client:${pravegaKeycloakVersion}"

    compile "io.pravega:pravega-connectors-flink-${flinkMajorMinorVersion}_${flinkScalaVersion}:${flinkConnectorVersion}"
    compile "org.apache.flink:flink-streaming-java_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-connector-elasticsearch5_${flinkScalaVersion}:${flinkVersion}"
    compile "ch.qos.logback:logback-classic:1.1.7"
}

shadowJar {
    dependencies {
        include dependency("io.pravega:pravega-connectors-flink-${flinkMajorMinorVersion}_${flinkScalaVersion}:${flinkConnectorVersion}")
        include dependency("io.pravega:pravega-keycloak-client:${pravegaKeycloakVersion}")

        //All below dependencies are from Elastic Search 5 connector
        include dependency("org.apache.flink:flink-connector-elasticsearch5_${flinkScalaVersion}:${flinkVersion}")
        include dependency("org.apache.flink:flink-connector-elasticsearch-base_${flinkScalaVersion}:${flinkVersion}")
        include dependency("org.elasticsearch.client:transport:5.1.2")
        include dependency("org.elasticsearch:elasticsearch:5.1.2")
        include dependency("org.apache.lucene:lucene-core:6.3.0")
        include dependency("org.apache.lucene:lucene-analyzers-common:6.3.0")
        include dependency("org.apache.lucene:lucene-backward-codecs:6.3.0")
        include dependency("org.apache.lucene:lucene-grouping:6.3.0")
        include dependency("org.apache.lucene:lucene-highlighter:6.3.0")
        include dependency("org.apache.lucene:lucene-join:6.3.0")
        include dependency("org.apache.lucene:lucene-memory:6.3.0")
        include dependency("org.apache.lucene:lucene-misc:6.3.0")
        include dependency("org.apache.lucene:lucene-queries:6.3.0")
        include dependency("org.apache.lucene:lucene-queryparser:6.3.0")
        include dependency("org.apache.lucene:lucene-sandbox:6.3.0")
        include dependency("org.apache.lucene:lucene-spatial:6.3.0")
        include dependency("org.apache.lucene:lucene-spatial-extras:6.3.0")
        include dependency("org.apache.lucene:lucene-spatial3d:6.3.0")
        include dependency("org.apache.lucene:lucene-suggest:6.3.0")
        include dependency("org.elasticsearch:securesm:1.1")
        include dependency("net.sf.jopt-simple:jopt-simple:5.0.2")
        include dependency("com.carrotsearch:hppc:0.7.1")
        include dependency("joda-time:joda-time:2.9.5")
        include dependency("org.yaml:snakeyaml:1.15")
        include dependency("com.fasterxml.jackson.dataformat:jackson-dataformat-smile:2.8.1")
        include dependency("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.1")
        include dependency("com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.8.1")
        include dependency("com.fasterxml.jackson.core:jackson-core:2.8.1")
        include dependency("com.tdunning:t-digest:3.0")
        include dependency("org.hdrhistogram:HdrHistogram:2.1.6")
        include dependency("net.java.dev.jna:jna:4.2.2")
        include dependency("org.elasticsearch.plugin:transport-netty3-client:5.1.2")
        include dependency("org.elasticsearch.plugin:transport-netty4-client:5.1.2")
        include dependency("io.netty:netty-buffer:4.1.6.Final")
        include dependency("io.netty:netty-codec:4.1.6.Final")
        include dependency("io.netty:netty-codec-http:4.1.6.Final")
        include dependency("io.netty:netty-common:4.1.6.Final")
        include dependency("io.netty:netty-handler:4.1.6.Final")
        include dependency("io.netty:netty-resolver:4.1.6.Final")
        include dependency("io.netty:netty-transport:4.1.6.Final")
        include dependency("org.elasticsearch.plugin:reindex-client:5.1.2")
        include dependency("org.elasticsearch.client:rest:5.1.2")
        include dependency("org.apache.httpcomponents:httpclient:4.5.2")
        include dependency("org.apache.httpcomponents:httpcore:4.4.5")
        include dependency("org.apache.httpcomponents:httpasyncclient:4.1.2")
        include dependency("org.apache.httpcomponents:httpcore-nio:4.4.5")
        include dependency("org.elasticsearch.plugin:lang-mustache-client:5.1.2")
        include dependency("com.github.spullara.mustache.java:compiler:0.9.3")
        include dependency("org.elasticsearch.plugin:percolator-client:5.1.2")
        include dependency("org.apache.logging.log4j:log4j-to-slf4j:2.7")
        include dependency("org.apache.logging.log4j:log4j-api:2.7")
        include dependency("ch.qos.logback:logback-classic:1.1.7")
        include dependency("ch.qos.logback:logback-core:1.1.7")

    }
}

task scriptAnomalyDetection(type: CreateStartScripts) {
    outputDir = file('build/scripts')
    mainClassName = 'io.pravega.anomalydetection.ApplicationMain'
    applicationName = 'anomaly-detection'
    defaultJvmOpts = ["-Dlog4j.configuration=file:conf/logback.xml"]
    classpath = files(jar.archivePath) + sourceSets.main.runtimeClasspath
}

distributions {
    main {
        baseName = archivesBaseName
        contents {
            into('bin') {
                from project.scriptAnomalyDetection
            }
            into('lib') {
                from shadowJar
                from(project.configurations.shadow)
                from(jar)
                from(project.configurations.runtime)
            }
            into('conf') {
                from(project.file('src/main/dist/conf/logback.xml'))
                from(project.file('src/main/dist/conf/app.json'))
            }
        }
    }
}
