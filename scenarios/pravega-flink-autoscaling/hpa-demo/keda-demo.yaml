apiVersion: keda.sh/v1alpha1
# Custom CRD provisioned by the Keda operator
kind: ScaledObject
metadata:
  name: taskmanager-scaledobject
  namespace: monitoring
spec:
  scaleTargetRef:
    # target our deployment
    name: flink-taskmanager
  # Interval to when to query Prometheus
  pollingInterval: 15
  # The period to wait after the last trigger reported active
  # before scaling the deployment back to 1
  cooldownPeriod: 30
  # min replicas keda will scale to
  # if you have an app that has an dependency on pubsub
  # this would be a good use case to set it to zero
  # why keep your app running if your topic has no messages?
  minReplicaCount: 1
  # max replicas keda will scale to
  maxReplicaCount: 15
#  advanced:
#    # HPA config
#    # Read about it here: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
#    horizontalPodAutoscalerConfig:
#      behavior:
#        scaleDown:
#          stabilizationWindowSeconds: 30
#          policies:
#            - type: Percent
#              value: 50
#              periodSeconds: 30
#        scaleUp:
#          stabilizationWindowSeconds: 0
#          policies:
#            - type: Percent
#              value: 50
#              periodSeconds: 10
  triggers:
    - type: prometheus
      metadata:
        # address where keda can reach our prometheus on,
        # this is an example of default SDP prometheus
        serverAddress: http://prometheus-server.cluster-monitoring.svc.cluster.local:80
        # metric on what we want to scale
        metricName: segments
        # if treshold is reached then Keda will scale our deployment
        threshold: "1"
        query: pravega_controller_segments_count{stream="test"}