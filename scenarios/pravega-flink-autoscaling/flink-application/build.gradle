/*
 * Copyright Pravega Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.3'
}

apply plugin: "java"
apply plugin: "scala"
apply plugin: "distribution"
apply plugin: 'idea'
apply plugin: 'eclipse'

sourceCompatibility = "1.8"
archivesBaseName = 'pravega-flink-examples'

ext {
    pravegaVersion = loadProperties().getProperty("pravegaVersion")
    pravegaKeycloakVersion = loadProperties().getProperty("pravegaKeycloakVersion")
    flinkMajorMinorVersion = loadProperties().getProperty("flinkMajorMinorVersion")
    flinkScalaVersion = loadProperties().getProperty("flinkScalaVersion")
    flinkConnectorVersion = loadProperties().getProperty("flinkConnectorVersion")
    flinkVersion = loadProperties().getProperty("flinkVersion")
    slf4jLog4JVersion = loadProperties().getProperty("slf4jLog4JVersion")
}

def loadProperties() {
    def customPropertiesFile = file('../../../gradle.properties')
    def properties = new Properties()
    customPropertiesFile.withInputStream { properties.load(it) }
    return properties
}

dependencies {
    compile "io.pravega:pravega-keycloak-client:${pravegaKeycloakVersion}"
    compile "io.pravega:pravega-connectors-flink-${flinkMajorMinorVersion}_${flinkScalaVersion}:${flinkConnectorVersion}"
    compile "org.apache.flink:flink-streaming-java_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-clients_${flinkScalaVersion}:${flinkVersion}"
    compile "org.slf4j:slf4j-log4j12:${slf4jLog4JVersion}"
}

shadowJar {
    dependencies {
        include dependency("org.scala-lang.modules:scala-java8-compat_${flinkScalaVersion}")
        include dependency("io.pravega:pravega-connectors-flink-${flinkMajorMinorVersion}_${flinkScalaVersion}")
        include dependency("io.pravega:pravega-keycloak-client:${pravegaKeycloakVersion}")
    }
}

task scriptFlinkReaderApplication(type: CreateStartScripts) {
    outputDir = file('build/scripts')
    mainClassName = 'io.pravega.example.flink.reader.FlinkReaderApplication'
    applicationName = 'flinkReaderApplication'
    classpath = files(jar.archivePath) + sourceSets.main.runtimeClasspath
}

distributions {
    main {
        baseName = archivesBaseName
        contents {
            into('lib') {
                from shadowJar
                from(project.configurations.shadow)
                from(jar)
                from(project.configurations.runtime)
            }
            into('bin') {
                from project.scriptFlinkReaderApplication
            }
        }
    }
}
