#
# Copyright Pravega Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
version: '2.1'
services:
  sql-client:
    image: pravega/catalog-demo-flink-sql-client:1.0  # change to your own docker repo if you want to build this image
#    build: ./sql-client  # uncomment this line to build image on your own
    depends_on:
      pravega:
        condition: service_healthy
      schemaregistry:
        condition: service_healthy
      jobmanager:
        condition: service_started
    environment:
      FLINK_JOBMANAGER_HOST: jobmanager
      ZOOKEEPER_CONNECT: zookeeper
  jobmanager:
    image: flink:1.13.1-scala_2.12
    ports:
      - "18081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
  taskmanager:
    image: flink:1.13.1-scala_2.12
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 3
  pravega:
    image: pravega/pravega:0.10.2
    ports:
      - "9090:9090"
      - "12345:12345"
    command: "standalone"
    healthcheck:
      test: grep -F "Controller Services started successfully." standalone.log
    environment:
      HOST_IP: pravega
  schemaregistry:
    image: pravega/schemaregistry:0.3.0
    depends_on:
      pravega:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      CONTROLLER_URL: tcp://pravega:9090
    healthcheck:
      test: grep -F "Starting REST server listening on port" schema-registry.log
  datagen:
    image: pravega/catalog-demo-datagen:1.0 # change to your own docker repo if you want to build this image
#    build: ./datagen  # uncomment this line to build image on your own
    command: "java -classpath /opt/datagen/datagen.jar Datagen -input /opt/datagen/user_behavior.log -speedup 1000
              -controlleruri tcp://pravega:9090 -schemaregistryuri http://schemaregistry:9092"
    depends_on:
      pravega:
        condition: service_healthy
      schemaregistry:
        condition: service_healthy
